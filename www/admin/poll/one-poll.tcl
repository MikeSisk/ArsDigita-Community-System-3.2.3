# $Id: one-poll.tcl,v 3.0 2000/02/06 03:26:59 ron Exp $
# one-poll.tcl -- show info(e) about a single poll

# markd@arsdigita.com 

set_form_variables

# expects poll_id

ad_maybe_redirect_for_registration

set db [ns_db gethandle]

set selection [ns_db 1row $db "
select name, description, start_date, end_date, require_registration_p
  from polls
 where poll_id = $poll_id
"]

set_variables_after_query


ReturnHeaders

ns_write "
[ad_admin_header "One Poll: $name"]
<h2>One Poll: $name</h2>

[ad_admin_context_bar [list "/admin/poll" Polls] One]

<hr>

<ul>
<li>Name:  $name

<li>Description:  $description

<li>Dates:  [util_AnsiDatetoPrettyDate $start_date] to [util_AnsiDatetoPrettyDate $end_date]

<li>User entry page:  <a href=\"/poll/one-poll.tcl?[export_url_vars poll_id]\">/poll/one-poll.tcl?[export_url_vars poll_id]</a>

<li>Results page:  <a href=\"/poll/poll-results.tcl?[export_url_vars poll_id]\">/poll/poll-results.tcl?[export_url_vars poll_id]</a>

(if these look fishy, look at 
<a href=\"integrity-stats.tcl?[export_url_vars poll_id]\">integrity statistics</a>)

<li>Require Registration?  [util_PrettyBoolean $require_registration_p]

<br>
<br>

\[ <a href=\"poll-delete.tcl?[export_url_vars poll_id]\">delete</a> |
 <a href=\"poll-edit.tcl?[export_url_vars poll_id]\">edit</a> \] 
</ul>

<h3>Choices for this poll</h3>

<p>
<ul>
"

set count [database_to_tcl_string $db "
select count(*) 
  from poll_choices 
 where poll_id = $poll_id
"]

set choice_id [database_to_tcl_string $db "select poll_choice_id_sequence.nextval from dual"]


ns_write "
<form method=post action=choice-new.tcl>
[export_form_vars poll_id choice_id count choice_id]

<table border=1>
"



# construct a list of numbers so we can easily present a choice
# of ordering values

set order_list [list]
set loop_limit [expr $count + 1]

for { set i 1 } { $i <= $loop_limit } { incr i } {
    lappend order_list $i
}
    

# if we have existing items, make a table of a pop-up to
# determine ordering.  The <se.ect> names are of the form
# order_$choice_id, and a regexp pulls out the choice ID
# in the page that handles this POST.

if { $count > 0 } {

    set selection [ns_db select $db "
select choice_id, label
  from poll_choices
 where poll_id = $poll_id
 order by sort_order
"]


    # don't use the absolute values of the sort_order, since they may
    # not necessarily be in sequential order.
    
    set i 1
    
    while { [ns_db getrow $db $selection] } {
	set_variables_after_query
	
	ns_write "
<tr>
<td> <select name=order_$choice_id>
         [ad_generic_optionlist $order_list $order_list $i]
     </select>
<td> $label  <font size=-1>(<a href=choice-delete.tcl?[export_url_vars choice_id poll_id]>delete</a>)</font> \n
"
        incr i
    }

} else {

    # yeah, the page generated by this is a little ugly.

    ns_write "
<tr>
<td>
<td> You haven't defined any choices for this poll yet.
"
}

ns_db releasehandle $db

ns_write "

<tr>
<td> <select name=choice_new>
         [ad_generic_optionlist $order_list $order_list $i]
     </select>
<td> <input type=text name=label size=50>
<input type=submit name=action value=\"Define New Choice\">

<tr>
<td> <input type=submit name=action value=\"Change Ordering\">
<td> &nbsp;


</table>

</form>

<p>

</ul>

<p>
[ad_admin_footer]
"

